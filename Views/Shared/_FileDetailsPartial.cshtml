@using Appa_MVC.Models
@model  Appa_MVC.Models.File

@{
    ViewBag.Title = "_FileDetailsPartial";
    Layout = null;
}

<div class="ibox-tools">
    <div class="ibox">
        <div class="ibox-title">
            <h5> <strong> File Information And Department Notes </strong> </h5>
            <a class="collapse-link">
                <i class="fa fa-chevron-up"></i>
            </a>
        </div>
        <div class="ibox-content">
           
             

                <div class="form-horizontal">
                    @Html.ValidationSummary(true)
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FileNumber, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.FileNumber, new { @class = "form-control", disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.FileNumber)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Company, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Company)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Currency, new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @{
                                    var currencylist = Enum.GetValues(typeof(CurrencyList.Currencies)).OfType<CurrencyList.Currencies>().Select(m => new { Text = m.ToString(), Value = (int)m }).ToList();

                                    @Html.DropDownListFor(m => m.Currency, new SelectList(currencylist, "Value", "Text"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Currency)
                                }
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Discount, new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.Discount, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Discount)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveryCost, new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.DeliveryCost, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DeliveryCost)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveryPlace, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.DeliveryPlace, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DeliveryPlace)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PaymentTerm, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.PaymentTerm, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PaymentTerm)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note1, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Note1, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Note1)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note2, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Note2, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Note2)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note3, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Note3, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Note3)
                            </div>
                            @Html.HiddenFor(model => model.Id)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="">
                            <div class="">
                                <button id="btnupdate" class="btn btn-danger demo2 btn-block"> Update </button>
                            </div>

                        </div>
                    </div>
                </div>
        
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles") 
    @Styles.Render("~/plugins/sweetAlertStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/sweetAlert")

    <script type="text/javascript"> 
    </script>
}