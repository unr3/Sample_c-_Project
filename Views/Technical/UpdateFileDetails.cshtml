@using Appa_MVC.Models
@model  Appa_MVC.Models.File

@{
    ViewBag.Title = "UpdateFileDetails";
    Layout = null; ;
}

<div class="ibox-tools">
    <div class="ibox">
        <div class="ibox-title">
            <h5> <strong> File Information And Department Notes </strong> </h5>
            <a class="collapse-link">
                <i class="fa fa-chevron-up"></i>
            </a>
        </div>
        <div class="ibox-content">
            @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FileNumber, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.FileNumber, new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.FileNumber)
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Company, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Company)
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Currency, new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @{
                            var currencylist = Enum.GetValues(typeof(CurrencyList.Currencies)).OfType<CurrencyList.Currencies>().Select(m => new { Text = m.ToString(), Value = (int)m }).ToList();

                            @Html.DropDownListFor(m => m.Currency, new SelectList(currencylist, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Currency)
                            }
                        </div>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Discount, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Discount, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Discount)
                        </div>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeliveryCost, new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.DeliveryCost, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeliveryCost)
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeliveryPlace, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.DeliveryPlace, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeliveryPlace)
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentTerm, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.PaymentTerm, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaymentTerm)
                        </div>
                    </div>
                </div>
                <div class="col-md-2" style="margin-left:10px">
                    <div class="form-group" id="data_1">
                        @Html.LabelFor(model => model.Eta, new { @class = "control-label col-md-4" })
                        <div class="col-md-7 input-group date">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span> 
                            @Html.TextBoxFor(model => model.Eta, new { @class = "form-control" }) 
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                      <div class="form-group">
                            @Html.LabelFor(model => model.VadePesin, new { @class = "control-label col-md-4" })
                            @Html.ValidationMessageFor(model => model.VadePesin)
                            <div class="col-md-8">
                                <select id="VadePesin" data-placeholder="VadePesin" class="form-control" tabindex="4" name="VadePesin" >
                               
                                        @if (Model.VadePesin == null)
                                        {
                                            <option value="">Please Choose</option>
                                            <option >VADE</option>
                                            <option>PEŞİN</option> 
                                        }
                                        else
                                        {
                                             
                                            <option>@Model.VadePesin</option>
                                            List<string> liste= new List<string>();
                                            liste.Add("VADE");
                                            liste.Add("PEŞİN"); 
                                           
                                            liste.Remove(Model.VadePesin);

                                            foreach (var i in liste)
                                            {
                                                <option >@i</option>
                                            }
                                        } 
                                   
                                
                                </select>
                            </div>
         
                        </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Note1, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Note1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Note1)
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Note2, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Note2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Note2)
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Note3, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Note3, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Note3)
                        </div>
                        @Html.HiddenFor(model => model.Id)
                    </div>
                </div>
                <div class="form-group">
                    <div class="">
                        <div class="">
                            <input type="submit" value="Update" class="btn btn-danger demo2 btn-block" />
                        </div>

                    </div>
                </div>
            </div>
    }


        </div>
         
    </div>
</div>
 
@section Styles {
  


}

@section Scripts {
    

  

}